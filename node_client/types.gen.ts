// This file is auto-generated by @hey-api/openapi-ts

export type GetTodosPayload = {
    /**
     * List of all todos
     */
    todos?: Array<Todo>;
};

export type NewTodo = {
    /**
     * Title of the new todo
     */
    title?: string;
    /**
     * Initial completion state of the new todo
     */
    completed?: boolean;
};

export type Todo = {
    /**
     * Unique identifier for the todo
     */
    id?: number;
    /**
     * Title of the todo
     */
    title?: string;
    /**
     * Whether the todo is marked as completed
     */
    completed?: boolean;
};

export type ProtobufAny = {
    '@type'?: string;
    [key: string]: unknown | string | undefined;
};

export type RpcStatus = {
    code?: number;
    message?: string;
    details?: Array<ProtobufAny>;
};

export type GetTodosData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/todos';
};

export type GetTodosErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type GetTodosError = GetTodosErrors[keyof GetTodosErrors];

export type GetTodosResponses = {
    /**
     * A successful response.
     */
    200: GetTodosPayload;
};

export type GetTodosResponse = GetTodosResponses[keyof GetTodosResponses];

export type CreateTodoData = {
    body: NewTodo;
    path?: never;
    query?: never;
    url: '/todos';
};

export type CreateTodoErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type CreateTodoError = CreateTodoErrors[keyof CreateTodoErrors];

export type CreateTodoResponses = {
    /**
     * A successful response.
     */
    200: Todo;
};

export type CreateTodoResponse = CreateTodoResponses[keyof CreateTodoResponses];

export type GetTodoByIdData = {
    body?: never;
    path: {
        /**
         * ID of the todo to fetch
         */
        todoId: number;
    };
    query?: never;
    url: '/todos/{todoId}';
};

export type GetTodoByIdErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type GetTodoByIdError = GetTodoByIdErrors[keyof GetTodoByIdErrors];

export type GetTodoByIdResponses = {
    /**
     * A successful response.
     */
    200: Todo;
};

export type GetTodoByIdResponse = GetTodoByIdResponses[keyof GetTodoByIdResponses];

export type UpdateTodoData = {
    body: Todo;
    path: {
        /**
         * ID of the todo to update
         */
        todoId: number;
    };
    query?: never;
    url: '/todos/{todoId}';
};

export type UpdateTodoErrors = {
    /**
     * An unexpected error response.
     */
    default: RpcStatus;
};

export type UpdateTodoError = UpdateTodoErrors[keyof UpdateTodoErrors];

export type UpdateTodoResponses = {
    /**
     * A successful response.
     */
    200: Todo;
};

export type UpdateTodoResponse = UpdateTodoResponses[keyof UpdateTodoResponses];

export type ClientOptions = {
    baseURL: `${string}://${string}` | (string & {});
};